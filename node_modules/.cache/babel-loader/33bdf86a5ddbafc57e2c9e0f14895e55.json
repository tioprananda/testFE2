{"remainingRequest":"/home/kachon/Desktop/projects/testFE/node_modules/babel-loader/lib/index.js!/home/kachon/Desktop/projects/testFE/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/kachon/Desktop/projects/testFE/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/kachon/Desktop/projects/testFE/src/components/SoftInput.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/kachon/Desktop/projects/testFE/src/components/SoftInput.vue","mtime":1673177957944},{"path":"/home/kachon/Desktop/projects/testFE/babel.config.js","mtime":1656013692000},{"path":"/home/kachon/Desktop/projects/testFE/node_modules/cache-loader/dist/cjs.js","mtime":1672970712865},{"path":"/home/kachon/Desktop/projects/testFE/node_modules/babel-loader/lib/index.js","mtime":1672970715033},{"path":"/home/kachon/Desktop/projects/testFE/node_modules/cache-loader/dist/cjs.js","mtime":1672970712865},{"path":"/home/kachon/Desktop/projects/testFE/node_modules/vue-loader-v16/dist/index.js","mtime":1672970715013}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTb2Z0SW5wdXQiLAogIHByb3BzOiB7CiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogImRlZmF1bHQiCiAgICB9LAogICAgc3VjY2VzczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGVycm9yOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgaWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIiCiAgICB9LAogICAgaWNvbkRpcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIiCiAgICB9LAogICAgbmFtZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIiCiAgICB9LAogICAgaWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIKICAgIH0sCiAgICBwbGFjZWhvbGRlcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJUeXBlIGhlcmUuLi4iCiAgICB9LAogICAgdHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJ0ZXh0IgogICAgfSwKICAgIGlzUmVxdWlyZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENsYXNzZXM6IChzaXplLCBzdWNjZXNzLCBlcnJvcikgPT4gewogICAgICBsZXQgc2l6ZVZhbHVlLCBpc1ZhbGlkVmFsdWU7CiAgICAgIHNpemVWYWx1ZSA9IHNpemUgPyBgZm9ybS1jb250cm9sLSR7c2l6ZX1gIDogbnVsbDsKICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgaXNWYWxpZFZhbHVlID0gImlzLWludmFsaWQiOwogICAgICB9IGVsc2UgaWYgKHN1Y2Nlc3MpIHsKICAgICAgICBpc1ZhbGlkVmFsdWUgPSAiaXMtdmFsaWQiOwogICAgICB9IGVsc2UgewogICAgICAgIGlzVmFsaWRWYWx1ZSA9ICIiOwogICAgICB9CiAgICAgIHJldHVybiBgJHtzaXplVmFsdWV9ICR7aXNWYWxpZFZhbHVlfWA7CiAgICB9LAogICAgZ2V0SWNvbjogaWNvbiA9PiBpY29uID8gaWNvbiA6IG51bGwsCiAgICBoYXNJY29uOiBpY29uID0+IGljb24gPyAiaW5wdXQtZ3JvdXAiIDogbnVsbAogIH0KfTs="},{"version":3,"mappings":"AAyBA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX,CAAC;IACDG,KAAK,EAAE;MACLL,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX,CAAC;IACDI,IAAI,EAAE;MACJN,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDK,OAAO,EAAE;MACPP,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDL,IAAI,EAAE;MACJG,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDM,EAAE,EAAE;MACFR,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDO,KAAK,EAAE;MACLT,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDQ,WAAW,EAAE;MACXV,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDF,IAAI,EAAE;MACJA,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDS,UAAU,EAAE;MACVX,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EACDU,OAAO,EAAE;IACPC,UAAU,EAAE,CAACd,IAAI,EAAEI,OAAO,EAAEE,KAAK,KAAK;MACpC,IAAIS,SAAS,EAAEC,YAAY;MAE3BD,SAAQ,GAAIf,IAAG,GAAK,gBAAeA,IAAK,KAAI,IAAI;MAEhD,IAAIM,KAAK,EAAE;QACTU,YAAW,GAAI,YAAY;MAC7B,OAAO,IAAIZ,OAAO,EAAE;QAClBY,YAAW,GAAI,UAAU;MAC3B,OAAO;QACLA,YAAW,GAAI,EAAE;MACnB;MAEA,OAAQ,GAAED,SAAS,IAAIC,YAAa,EAAC;IACvC,CAAC;IACDC,OAAO,EAAGV,IAAI,IAAMA,IAAG,GAAIA,IAAG,GAAI,IAAK;IACvCW,OAAO,EAAGX,IAAI,IAAMA,IAAG,GAAI,aAAY,GAAI;EAC7C;AACF,CAAC","names":["name","props","size","type","String","default","success","Boolean","error","icon","iconDir","id","value","placeholder","isRequired","methods","getClasses","sizeValue","isValidValue","getIcon","hasIcon"],"sourceRoot":"","sources":["/home/kachon/Desktop/projects/testFE/src/components/SoftInput.vue"],"sourcesContent":["<template>\n  <div class=\"form-group\">\n    <div :class=\"hasIcon(icon)\">\n      <span v-if=\"iconDir === 'left'\" class=\"input-group-text\">\n        <i :class=\"getIcon(icon)\"></i>\n      </span>\n      <input\n        :id=\"id\"\n        :type=\"type\"\n        class=\"form-control\"\n        :class=\"getClasses(size, success, error)\"\n        :name=\"name\"\n        :value=\"modelValue\"\n        :placeholder=\"placeholder\"\n        :isRequired=\"isRequired\"\n        @input='$emit(\"update:modelValue\", $event.target.value)'\n      />\n      <span v-if=\"iconDir === 'right'\" class=\"input-group-text\">\n        <i :class=\"getIcon(icon)\"></i>\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"SoftInput\",\n  props: {\n    size: {\n      type: String,\n      default: \"default\",\n    },\n    success: {\n      type: Boolean,\n      default: false,\n    },\n    error: {\n      type: Boolean,\n      default: false,\n    },\n    icon: {\n      type: String,\n      default: \"\",\n    },\n    iconDir: {\n      type: String,\n      default: \"\",\n    },\n    name: {\n      type: String,\n      default: \"\",\n    },\n    id: {\n      type: String,\n      default: \"\",\n    },\n    value: {\n      type: String,\n      default: \"\",\n    },\n    placeholder: {\n      type: String,\n      default: \"Type here...\",\n    },\n    type: {\n      type: String,\n      default: \"text\",\n    },\n    isRequired: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    getClasses: (size, success, error) => {\n      let sizeValue, isValidValue;\n\n      sizeValue = size ? `form-control-${size}` : null;\n\n      if (error) {\n        isValidValue = \"is-invalid\";\n      } else if (success) {\n        isValidValue = \"is-valid\";\n      } else {\n        isValidValue = \"\";\n      }\n\n      return `${sizeValue} ${isValidValue}`;\n    },\n    getIcon: (icon) => (icon ? icon : null),\n    hasIcon: (icon) => (icon ? \"input-group\" : null),\n  },\n};\n</script>\n\n  <!-- <div>\n    <input \n      type=\"text\"\n      placeholder=\"input\"\n      :value=\"modelValue\"\n      @input='$emit(\"update:modelValue\", $event.target.value)'\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  props : {\n    modelValue : String\n  },\n\n}\n</script> -->\n"]}]}